-------------------Product-----------------

1. Get products
Method: GET
URL: /api/products

Request: -

Response:
[
    {
        "id": 1,
        "productName": ...,
        "description": ...,
        "category": {
            "id": 1,
            "categoryName": ...
        },
        "manufacturer": {
            "id": 1,
            "manufacturerName": ...,
            "country": ...
        },
        "price":   ...,
        "quantity" ...
    },
    {
    }
]

2. Get products by category
Method: GET
URL: /api/products/category/{categoryId}

Request: -

Response:
[
    {
        "id": 1,
        "productName": ...,
        "description": ...,
        "category": {
            "id": 1,
            "categoryName": ...
        },
        "manufacturer": {
            "id": 1,
            "manufacturerName": ...,
            "country": ...
        },
        "price":   ...,
        "quantity" ...
    },
    {
    }
]


3. Get products by price range
Method: GET
URL: /api/products/category/{categoryId}/query?minPrice={minPrice}&maxPrice={maxPrice}

Request: -

Response:
[
    {
        "id": 1,
        "productName": ...,
        "description": ...,
        "category": {
            "id": 1,
            "categoryName": ...
        },
        "manufacturer": {
            "id": 1,
            "manufacturerName": ...,
            "country": ...
        },
        "price":   ...,
        "quantity" ...
    },
    {
    }
]


4. Get products by category and manufacturer
Method: GET
URL: /api/products/category/{categoryId}/manufacturer/{manufacturerId}

Request: -

Response:
[
    {
        "id": 1,
        "productName": ...,
        "description": ...,
        "category": {
            "id": 1,
            "categoryName": ...
        },
        "manufacturer": {
            "id": 1,
            "manufacturerName": ...,
            "country": ...
        },
        "price":   ...,
        "quantity" ...
    },
    {
    }
]


5. Get products by category, manufacturer and range price
Method: GET
URL: /api/products/category/{categoryId}/{manufacturerId}/manufacturer/priceRange?minPrice={minPrice}&maxPrice={maxPrice}

Request: -

Response:
[
    {
        "id": 1,
        "productName": ...,
        "description": ...,
        "category": {
            "id": 1,
            "categoryName": ...
        },
        "manufacturer": {
            "id": 1,
            "manufacturerName": ...,
            "country": ...
        },
        "price":   ...,
        "quantity" ...
    },
    {
    }
]


6. Get productInfo by id
Method: GET
URL: /api/products/{productId}

Request: -

Response:
{
    "price":   ...,
    "quantity" ...
}




7. Get product by id
Method: GET
URL: /api/products/{productId}

Request: -

Response:
{
    "id": 1,
    "productName": ...,
    "description": ...,
    "category": {
         "id": 1,
         "categoryName": ...
    },
    "manufacturer": {
        "id": 1,
        "manufacturerName": ...,
        "country": ...
    },
    "price": ...,
    "quantity" ...
}


-------------------User-----------------


1. Register user
Method: POST
URL:/api/users/register

Request:
{
    "username":             "username1",
    "password":             ...
}

Response:
{
    "id":                   1,
    "username":             "username1",
    "createManagerDate":    ...,
    "lastUpdate":           ...
}


2. Authorisation user
Method: POST
URL:/api/users/login

Request:
{
    "username":             "username1",
    "password":             ...
}

Response:
{
    "id":                   1,
    "username":             "username1",
    "createManagerDate":    ...,
    "lastUpdate":           ...
}


3. Update user by id
Method: GET
URL:/api/users/{id}

Request:
{
    "username":             "username1"
}

Response:
{
    "id":                   1,
    "username":             "username1",
    "createManagerDate":    ...,
    "lastUpdate":           ...
}


-------------------Order-----------------


1. Show info about user's cart
Method: GET
URL: /api/orders/cart/{userId}

Request: -

Response:
{
    user_id: 1,
    cartItems: [
        {
            "product_name": ...,
            "description":  ...,
            "category": {
                "id": 1,
                "category_name"
            },
            "manufacturer": {
                "id": 1,
                "manufacturer_name": ...,
                "country": ...
            }
        }
    ],
}


3. Place an order
Method: POST
URL: /api/orders/placeOrder/{userId}

Request:
{
    "paymentMethod": "Credit Card"
}

Response:
{
    "order_id": ...,
    "orderItems": [
        {
            product: {
                "productId": 1,
                "productName": ...,
            },
            "quantity": 5,
            "price": 100.0,
        },
        {
            product: {
                "productId": 1,
                "productName": ...,
            },
            "quantity": 5,
            "price": 100.0,
        }
    ],
    "totalPrice": ...,
    "orderStatus": "Confirmed"
}


4. Cancel order
Method: PUT
URL: /api/orders/cancelOrder/{userId}

Request: -

Response:
{
    "orderId": ...
    "orderStatus": "Cancelled"
}



5. get list orders
Method: GET
URL: /api/orders/{id}

Request: -

Response:
[
    {
        "orderId": ...,
        "orderItems": [
            {
                product: {
                    "productId": 1,
                    "productName": ...,
                },
                "quantity": 5,
                "price": 100.0,
            },
            {
            product: {
                "productId": 1,
                "productName": ...,
            },
            "quantity": 5,
            "price": 100.0,
            },
        ],
        "totalPrice": ...,
        "orderStatus": "Confirmed"
    }
]


6. Get information about order by id
Method: PUT
URL: /api/orders/{orderId}

Request: -

Response:
{
    "orderId": ...,
    "orderItems": [
        {
            product: {
                "productId": 1,
                "productName": ...,
            },
            "quantity": 5,
            "price": 100.0,
        },
        {
        product: {
            "productId": 1,
            "productName": ...,
        },
        "quantity": 5,
        "price": 100.0,
        },
    ],
    "totalPrice": ...,
    "orderStatus": "Confirmed"
}


-------------------Cart Item-----------------

1. Get Cart Items
Method: GET
URL: /api/cartItems

Request: -

Response:
[
    {
        "product": {
            "id": 2,
            "productName": ...,
            "description": ...
            "category": {
                "id": 1,
                "categoryName": ...
            },
            "manufacturer": {
                "id": 1,
                "manufacturerName": ...,
                "country": ...
            },
            "price": ...,
            "quantity" ...
        },
        "quantity": ...,
        cart: {
            "id": 1,
            "user": {
                "id": 1,
                "username": ...,
                "createDate": ...,
                "lastVisitData" ...
            }
        }
    },
    {
    }
]


2. Get Cart Items by id
Method: GET
URL: /api/cartItems/{cartItemId}

Request: -

Response:
{
    product: {
        "id": 2,
        "productName": ...,
        "description": ...
        "category": {
            "id": 1,
            "categoryName": ...
            },
        "manufacturer": {
            "id": 1,
            "manufacturerName": ...,
            "country": ...
        },
        "price": ...,
        "quantity" ...
    },
    "quantity" ...,
    cart: {
        "id": 1,
        "user": {
            "id": 1,
            "username": ...,
            "createDate": ...,
            "lastVisitData": ...
        }
    }
}


3. Create Cart
Method: POST
URL: /api/cartItems

Request: -
{
    product: 2,
    quantity 6,
    cart: 1
}

Response:
{
    product: {
        "id": 2,
        productName: ...,
        description: ...
        "category": {
            "id": 1,
            "categoryName": ...
            },
        "manufacturer": {
            "id": 1,
            "manufacturerName": ...,
            "country": ...
        },
        "price": ...,
        "quantity" ...
    },
    "quantity": ...,
    cart: {
        "id": 1,
        "user": {
            "id": 1,
            "username": ...,
            "createDate": ...,
            "lastVisitData": ...
        }
    }
}


4. Delete Cart Item
Method: DELETE
URL: /api/cartItems/{cartItemId}

Request: -

Response:
{
    "message": "Item was successfully deleted"
}


-------------------Order_Item-----------------

1. Get Orders Items
Method: GET
URL: /api/ordersItems

Request: -

Response:
[
    {
        "id": 1,
        "product": {
            "id": 1,
            "productName": ...,
            "description": ...,
            "price": ...,
            "quantity" ...
        },
        quantity: ...,
        price: ...,
        "order": {
            "id": 1,
            "total_amount": 3,
            "user": {
                "id": 1,
                "username" ...
            },
            "order_status": {
                "id": 1,
                "order_status": ...
            },
            "payment_method": {
                "id": 1,
                "method": ...
            },
                "payment_status": {
                "id": 1,
                "payment_status": ...
            },
        "create_data": ...
    },
    {
    }
]

2. Get Order Item by id
Method: GET
URL: /api/ordersItems/{orderItemId}

Request: -

Response:
{
    "id": 1,
    "product": {
        "id": 1,
        "productName": ...,
        "description": ...,
        "price": ...,
        "quantity" ...
    },
    quantity: ...,
    price: ...,
    "order": {
        "id": 1,
        "total_amount": 3,
        "user": {
            "id": 1,
            "username" ...
        },
        "order_status": {
            "id": 1,
            "order_status": ...
        },
        "payment_method": {
            "id": 1,
            "method": ...
        },
        "payment_status": {
            "id": 1,
            "payment_status": ...
        },
    },
    "create_data": ...
}


3. Add Order
Method: POST
URL: /api/ordersItems

Request: -
{
    "productId": 3,
    "quantity": 5,
    "orderId": 1
}

Response:
{
    "id": 1,
    "product": {
        "id": 3,
        "productName": ...,
        "description": ...,
        "price": ...,
        "quantity" ...
    },
    quantity: 5,
    price: ...,
    "order": {
        "id": 1,
        "total_amount": 3,
        "user": {
            "id": 1,
            "username" ...
        },
        "order_status": {
            "id": 1,
            "order_status": ...
        },
        "payment_method": {
            "id": 1,
            "method": ...
        },
        "payment_status": {
            "id": 1,
            "payment_status": ...
        },
    },
    "create_data": ...
}


4. Delete Order
Method: DELETE
URL: /api/ordersItems

Request: -

Response:
{
    "message": "Item was successfully deleted"
}
